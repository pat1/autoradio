[autoradiod]

#player to use (AutoPlayer, xmms, audacious)
player="AutoPlayer"

#directory where write new playlists  generated by autoradiod
playlistdir="spots"

# path to working file
logfile="/tmp/autoradiod.log"
errfile  = '/tmp/autoradiod.err'
lockfile = "/tmp/autoradiod.lock"
timestampfile = "/tmp/autoradiod.timestamp"

# host xmms is running on
xmms_host="localhost"

#backward and forward time intervat to check for schedule conflict 
minelab=180

# tollerance time interval to recovery schedule not done ( backward time when start autoradiod )
# to adjust the programming you have to make changes minsched minutes before
minsched=5

locale="it_IT.UTF-8"

#user     = pat1
#group    = pat1
#
#  [[ env ]]
#     DISPLAY=':0.0'
#     LANG=$locale

[autoradioweb]

logfile  = '/tmp/autoradioweb.log'
errfile  = '/tmp/autoradioweb.err'
lockfile = '/tmp/autoradioweb.lock'
#user     = myuser
#group    = mygroup
#port     = '8888'

# the web player can only manage ogg vorbis files at 44100Hz: enable or disable check on uploads
permit_no_playable_files = False

# tags help in the web view:  enable or disable check on uploads
# if file do not have tags will be rejected
# this enable or disable check for 44100Hz sample rate compatibility for enclosure
require_tags_in_enclosure = True

[django]

DEBUG = True
TEMPLATE_DEBUG = True
FILE_UPLOAD_PERMISSIONS = 420

# Make this unique, and don't share it with anybody.
SECRET_KEY = random-string-of-ascii
#SESSION_COOKIE_DOMAIN = autoradio

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'Europe/Rome'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'
#LANGUAGE_CODE = 'it-it'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# directories where Django looks for translation files.
LOCALE_PATHS='locale',

ADMINS=Your Name your_email@domain.com,
MANAGERS=Your Name your_email@domain.com,

# Absolute path to the directory that holds media.
# Example: "/home/media/media.lawrence.com/"
# default to current working directory + /media/
# set to "%s" special value to insert current directory
#MEDIA_ROOT = '/home/autoradio/media/'
MEDIA_ROOT ="%s/media/"

# Absolute path to the directory that holds static media files (css etc.).
# default to current working directory + /media/sito/
# set to "%s" special value to insert current directory
#MEDIA_SITE_ROOT='/home/autoradio/media/sito/'
MEDIA_SITE_ROOT="%s/media/sito/"

# Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
# Always use forward slashes, even on Windows.
# Don't forget to use absolute paths, not relative paths.
TEMPLATE_DIRS = "templates",

# URL base that handles the full site 
# BASE_URL + MEDIA_PREFIX compone MEDIA_URL and serve media served from MEDIA_ROOT.
# Make sure to use a trailing slash if there is a path component (optional in other cases).
# Examples: "http://media.lawrence.com", "http://example.com/autoradio/"
BASE_URL = 'http://localhost:8080'

# URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a
# trailing slash.
# Examples: "http://foo.com/media/", "/media/".
ADMIN_MEDIA_PREFIX = '/django/media/admin/'

# New configuration for django 1.4
# Set the STATIC_URL setting to the public URL for your static files
# (in most cases, the default value of /static/ is just fine).
STATIC_URL = '/django/media/'

# Set the STATIC_ROOT setting to point to the filesystem path you'd like
# your static files collected to when you use the collectstatic management
# command. For example:
# STATIC_ROOT = "/home/jacob/projects/mysite.com/sitestatic"
STATIC_ROOT = "/usr/lib/python2.7/site-packages/django/contrib/admin/static/"

# URL prefix for  media. Make sure to use a trailing slash.
# Examples: "/media/".
MEDIA_PREFIX = '/media/'

# URL prefix for  site media -- CSS, JavaScript and images. Make sure to use a
# trailing slash.
# Examples: "/media/".
MEDIA_SITE_PREFIX = '/media/'

# set to true if django have to serve static file
# set to false if you use other web server like apache
SERVE_STATIC=True

# The URL where requests are redirected for login, especially when
# using the login_required() decorator.
LOGIN_URL='/login/'

[database]
DATABASE_ENGINE = 'sqlite3'              # 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'ado_mssql'.
DATABASE_NAME = 'autoradio.sqlite3'      # Or path to database file if using sqlite3.

#DATABASE_ENGINE = 'mysql'               # 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'ado_mssql'.
#DATABASE_NAME = 'autoradio'             # Or path to database file if using sqlite3.
#DATABASE_USER = 'autoradio'             # Not used with sqlite3.
#DATABASE_PASSWORD = 'autoradio'         # Not used with sqlite3.
#DATABASE_HOST = 'autoradio'               # Set to empty string for localhost. Not used with sqlite3.
#DATABASE_PORT = ''                      # Set to empty string for default. Not used with sqlite3.


[autoplayer]

#user     = myuser
#group    = mygroup

logfile  = '/tmp/autoplayer.log'
errfile  = '/tmp/autoplayer.err'
lockfile = '/tmp/autoplayer.lock'

# Add an address that the dbus-daemon should listen on. The address is in the
# standard D-Bus format that contains a transport name plus possible
# parameters/options.
#       Example: <listen>unix:path=/tmp/foo</listen>
#       Example: <listen>tcp:host=localhost,port=1234</listen>
#busaddress='tcp:host=localhost,port=1234'

#audiosink = autoaudiosink              # set to autoaudiosink / jackaudiosink


[autoradiodbus]

#user     = myuser
#group    = mygroup

logfile  = '/tmp/autoradiodbus.log'
errfile  = '/tmp/autoradiodbus.err'
lockfile = '/tmp/autoradiodbus.lock'
conffile = 'dbus-autoradio.conf'

[jackdaemon]

user     = autoradio
group    = audio

logfile  = '/tmp/jackdaemon.log'
errfile  = '/tmp/jackdaemon.err'
lockfile = '/tmp/jackdaemon.lock'

